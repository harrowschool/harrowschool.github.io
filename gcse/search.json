[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Welcome",
    "section": "",
    "text": "Welcome to the GCSE Computer Science course."
  },
  {
    "objectID": "8. Programming Concepts/4. Turtles and Loops.html",
    "href": "8. Programming Concepts/4. Turtles and Loops.html",
    "title": "4. Turtles and Loops",
    "section": "",
    "text": "What do you think the mystery() function does?\nfrom turtle import *\n\ndef mystery():\n    fillcolor(\"Green\")\n    begin_fill()\n    pencolor(\"Red\")\n    forward(100)\n    right(90)\n    forward(100)\n    right(90)\n    forward(100)\n    right(90)\n    forward(100)\n    end_fill()\n\nmystery()\nDraw a picture of the result on your sheet.",
    "crumbs": [
      "8. Programming Concepts",
      "4. Turtles and Loops"
    ]
  },
  {
    "objectID": "8. Programming Concepts/4. Turtles and Loops.html#predict",
    "href": "8. Programming Concepts/4. Turtles and Loops.html#predict",
    "title": "4. Turtles and Loops",
    "section": "",
    "text": "What do you think the mystery() function does?\nfrom turtle import *\n\ndef mystery():\n    fillcolor(\"Green\")\n    begin_fill()\n    pencolor(\"Red\")\n    forward(100)\n    right(90)\n    forward(100)\n    right(90)\n    forward(100)\n    right(90)\n    forward(100)\n    end_fill()\n\nmystery()\nDraw a picture of the result on your sheet.",
    "crumbs": [
      "8. Programming Concepts",
      "4. Turtles and Loops"
    ]
  },
  {
    "objectID": "8. Programming Concepts/4. Turtles and Loops.html#lesson-objectives",
    "href": "8. Programming Concepts/4. Turtles and Loops.html#lesson-objectives",
    "title": "4. Turtles and Loops",
    "section": "Lesson Objectives",
    "text": "Lesson Objectives\n\nUse Python turtle graphics to draw shapes\n\nLearn for loops (iteration)\n\nModify programs that use a for loop\n\nWrite your own programs with a for loop",
    "crumbs": [
      "8. Programming Concepts",
      "4. Turtles and Loops"
    ]
  },
  {
    "objectID": "8. Programming Concepts/4. Turtles and Loops.html#run",
    "href": "8. Programming Concepts/4. Turtles and Loops.html#run",
    "title": "4. Turtles and Loops",
    "section": "Run",
    "text": "Run\n\nRun the code. Were you right about what would happen?",
    "crumbs": [
      "8. Programming Concepts",
      "4. Turtles and Loops"
    ]
  },
  {
    "objectID": "8. Programming Concepts/4. Turtles and Loops.html#investigate",
    "href": "8. Programming Concepts/4. Turtles and Loops.html#investigate",
    "title": "4. Turtles and Loops",
    "section": "Investigate",
    "text": "Investigate\n\nIn right(90) what does the 90 mean?\nWhat does forward(100) do?\nWhat happens when you move endfill() to a place earlier in the code?\nWhat happens if you change all the right(90) lines to right(45)? Try it and see.\nWhat commands do you think can be used to go back and left?\nWhat is the word def used for?\nWhat happens if any of the lines inside the function are not indented? Try it and see.",
    "crumbs": [
      "8. Programming Concepts",
      "4. Turtles and Loops"
    ]
  },
  {
    "objectID": "8. Programming Concepts/4. Turtles and Loops.html#modify-and-make",
    "href": "8. Programming Concepts/4. Turtles and Loops.html#modify-and-make",
    "title": "4. Turtles and Loops",
    "section": "Modify and Make",
    "text": "Modify and Make\nTry these exercises – see the commands on the sheet:\n\nRename the function square() rather than mystery and change\n\nthe colour of the lines\n\nthe fill colour\n\nthe length of the lines\n\nMake a new function called triangle() – you will need to change the angle between the lines\nUse penup() and pendown() to draw a square and a triangle with a space between them\nUse the circle() function to draw two circles, one inside the other\nDraw a regular hexagon made of six equilateral triangles (see sheet for an image).\n\nExtension: Draw some fireworks in different colours!",
    "crumbs": [
      "8. Programming Concepts",
      "4. Turtles and Loops"
    ]
  },
  {
    "objectID": "8. Programming Concepts/4. Turtles and Loops.html#turtle-commands-reference",
    "href": "8. Programming Concepts/4. Turtles and Loops.html#turtle-commands-reference",
    "title": "4. Turtles and Loops",
    "section": "Turtle Commands Reference",
    "text": "Turtle Commands Reference\n\n\n\nforward() or fd → Go forward\n\nbackward → Go backward\n\nright → Turn right\n\nleft → Turn left\n\npenup() → Lift the pen so you can move without drawing\n\npendown() → Drop the pen back to draw again\n\nfillcolor(\"Brown\") → Change the fill colour\n\nbegin_fill() → Begin filling the shape\n\nend_fill() → End the filling sequence\n\n\n\ncircle → Draw a circle\n\nreset → Clear the screen\n\nsetposition(x, y) → Move to position (x, y)\n\npensize() → Set pen/brush width\n\nshape(\"turtle\") → Change shape to a turtle\n\nshape(\"circle\") → Change shape to a circle\n\nstamp() → Leave an impression of the shape\n\npencolor(\"Red\") → Change pen colour\n\nwrite() → Write text",
    "crumbs": [
      "8. Programming Concepts",
      "4. Turtles and Loops"
    ]
  },
  {
    "objectID": "8. Programming Concepts/4. Turtles and Loops.html#predict-1",
    "href": "8. Programming Concepts/4. Turtles and Loops.html#predict-1",
    "title": "4. Turtles and Loops",
    "section": "Predict",
    "text": "Predict\nWhat does this code do? Draw what you think the result will be on the sheet.\nfrom turtle import *\n\ndef square():\n    for counter in range(4):\n        forward(100)\n        right(90)\n\nsquare()",
    "crumbs": [
      "8. Programming Concepts",
      "4. Turtles and Loops"
    ]
  },
  {
    "objectID": "8. Programming Concepts/4. Turtles and Loops.html#predict-2",
    "href": "8. Programming Concepts/4. Turtles and Loops.html#predict-2",
    "title": "4. Turtles and Loops",
    "section": "Predict",
    "text": "Predict\nWhat about this one? Draw what you think the result will be on the sheet.\nfrom turtle import *\n\ndef square():\n    for counter in range(4):\n        forward(100)\n        right(90)\n\nsquare()\nleft(45)\nsquare()",
    "crumbs": [
      "8. Programming Concepts",
      "4. Turtles and Loops"
    ]
  },
  {
    "objectID": "8. Programming Concepts/4. Turtles and Loops.html#run-1",
    "href": "8. Programming Concepts/4. Turtles and Loops.html#run-1",
    "title": "4. Turtles and Loops",
    "section": "Run",
    "text": "Run\nLet’s run the code to see if you were right.",
    "crumbs": [
      "8. Programming Concepts",
      "4. Turtles and Loops"
    ]
  },
  {
    "objectID": "8. Programming Concepts/4. Turtles and Loops.html#investigate-1",
    "href": "8. Programming Concepts/4. Turtles and Loops.html#investigate-1",
    "title": "4. Turtles and Loops",
    "section": "Investigate",
    "text": "Investigate\nfor counter in range(4):\n    forward(100)\n    right(90)\nIdentify which parts of the code match these descriptions:\n\nThese two lines will repeat four times\nThis is a stepper variable that goes up by one every time the code repeats\nThis tells us the code inside the loop will repeat four times\nThis word is a Python keyword used for loops (known as iteration)",
    "crumbs": [
      "8. Programming Concepts",
      "4. Turtles and Loops"
    ]
  },
  {
    "objectID": "8. Programming Concepts/4. Turtles and Loops.html#modify-and-make-1",
    "href": "8. Programming Concepts/4. Turtles and Loops.html#modify-and-make-1",
    "title": "4. Turtles and Loops",
    "section": "Modify and Make",
    "text": "Modify and Make\nfrom turtle import *\n\ndef square():\n    for counter in range(4):\n        forward(100)\n        right(90)\n\nsquare()\nleft(45)\nsquare()\n\nRewrite your previous triangle function so that it uses a for loop.\n\nWrite a function pentagon() to create a pentagon (5 sides) with sides length 200.\nWrite a function hexagon() to create a blue hexagon (6 sides) with sides length 50.\n\nExtension: Create an envelope() function which draws an envelope and check it works (Hint: it will call square() and triangle().)",
    "crumbs": [
      "8. Programming Concepts",
      "4. Turtles and Loops"
    ]
  },
  {
    "objectID": "8. Programming Concepts/4. Turtles and Loops.html#review",
    "href": "8. Programming Concepts/4. Turtles and Loops.html#review",
    "title": "4. Turtles and Loops",
    "section": "Review",
    "text": "Review\nFill in the SIX gaps to draw a triangle.\nBLANK triangle():\n    for counter BLANK range BLANK:\n        forward BLANK\n        right BLANK",
    "crumbs": [
      "8. Programming Concepts",
      "4. Turtles and Loops"
    ]
  },
  {
    "objectID": "8. Programming Concepts/4. Turtles and Loops._rjs.html#predict",
    "href": "8. Programming Concepts/4. Turtles and Loops._rjs.html#predict",
    "title": "4. Turtles and Loops",
    "section": "Predict",
    "text": "Predict\nWhat do you think the mystery() function does?\nfrom turtle import *\n\ndef mystery():\n    fillcolor(\"Green\")\n    begin_fill()\n    pencolor(\"Red\")\n    forward(100)\n    right(90)\n    forward(100)\n    right(90)\n    forward(100)\n    right(90)\n    forward(100)\n    end_fill()\n\nmystery()\nDraw a picture of the result on your sheet."
  },
  {
    "objectID": "8. Programming Concepts/4. Turtles and Loops._rjs.html#lesson-objectives",
    "href": "8. Programming Concepts/4. Turtles and Loops._rjs.html#lesson-objectives",
    "title": "4. Turtles and Loops",
    "section": "Lesson Objectives",
    "text": "Lesson Objectives\n\nUse Python turtle graphics to draw shapes\n\nLearn for loops (iteration)\n\nModify programs that use a for loop\n\nWrite your own programs with a for loop"
  },
  {
    "objectID": "8. Programming Concepts/4. Turtles and Loops._rjs.html#run",
    "href": "8. Programming Concepts/4. Turtles and Loops._rjs.html#run",
    "title": "4. Turtles and Loops",
    "section": "Run",
    "text": "Run\n\nRun the code. Were you right about what would happen?"
  },
  {
    "objectID": "8. Programming Concepts/4. Turtles and Loops._rjs.html#investigate",
    "href": "8. Programming Concepts/4. Turtles and Loops._rjs.html#investigate",
    "title": "4. Turtles and Loops",
    "section": "Investigate",
    "text": "Investigate\n\nIn right(90) what does the 90 mean?\nWhat does forward(100) do?\nWhat happens when you move endfill() to a place earlier in the code?\nWhat happens if you change all the right(90) lines to right(45)? Try it and see.\nWhat commands do you think can be used to go back and left?\nWhat is the word def used for?\nWhat happens if any of the lines inside the function are not indented? Try it and see."
  },
  {
    "objectID": "8. Programming Concepts/4. Turtles and Loops._rjs.html#modify-and-make",
    "href": "8. Programming Concepts/4. Turtles and Loops._rjs.html#modify-and-make",
    "title": "4. Turtles and Loops",
    "section": "Modify and Make",
    "text": "Modify and Make\nTry these exercises – see the commands on the sheet:\n\nRename the function square() rather than mystery and change\n\nthe colour of the lines\n\nthe fill colour\n\nthe length of the lines\n\nMake a new function called triangle() – you will need to change the angle between the lines\nUse penup() and pendown() to draw a square and a triangle with a space between them\nUse the circle() function to draw two circles, one inside the other\nDraw a regular hexagon made of six equilateral triangles (see sheet for an image).\n\nExtension: Draw some fireworks in different colours!"
  },
  {
    "objectID": "8. Programming Concepts/4. Turtles and Loops._rjs.html#turtle-commands-reference",
    "href": "8. Programming Concepts/4. Turtles and Loops._rjs.html#turtle-commands-reference",
    "title": "4. Turtles and Loops",
    "section": "Turtle Commands Reference",
    "text": "Turtle Commands Reference\n\n\n\nforward() or fd → Go forward\n\nbackward → Go backward\n\nright → Turn right\n\nleft → Turn left\n\npenup() → Lift the pen so you can move without drawing\n\npendown() → Drop the pen back to draw again\n\nfillcolor(\"Brown\") → Change the fill colour\n\nbegin_fill() → Begin filling the shape\n\nend_fill() → End the filling sequence\n\n\n\ncircle → Draw a circle\n\nreset → Clear the screen\n\nsetposition(x, y) → Move to position (x, y)\n\npensize() → Set pen/brush width\n\nshape(\"turtle\") → Change shape to a turtle\n\nshape(\"circle\") → Change shape to a circle\n\nstamp() → Leave an impression of the shape\n\npencolor(\"Red\") → Change pen colour\n\nwrite() → Write text"
  },
  {
    "objectID": "8. Programming Concepts/4. Turtles and Loops._rjs.html#predict-1",
    "href": "8. Programming Concepts/4. Turtles and Loops._rjs.html#predict-1",
    "title": "4. Turtles and Loops",
    "section": "Predict",
    "text": "Predict\nWhat does this code do? Draw what you think the result will be on the sheet.\nfrom turtle import *\n\ndef square():\n    for counter in range(4):\n        forward(100)\n        right(90)\n\nsquare()"
  },
  {
    "objectID": "8. Programming Concepts/4. Turtles and Loops._rjs.html#predict-2",
    "href": "8. Programming Concepts/4. Turtles and Loops._rjs.html#predict-2",
    "title": "4. Turtles and Loops",
    "section": "Predict",
    "text": "Predict\nWhat about this one? Draw what you think the result will be on the sheet.\nfrom turtle import *\n\ndef square():\n    for counter in range(4):\n        forward(100)\n        right(90)\n\nsquare()\nleft(45)\nsquare()"
  },
  {
    "objectID": "8. Programming Concepts/4. Turtles and Loops._rjs.html#run-1",
    "href": "8. Programming Concepts/4. Turtles and Loops._rjs.html#run-1",
    "title": "4. Turtles and Loops",
    "section": "Run",
    "text": "Run\nLet’s run the code to see if you were right."
  },
  {
    "objectID": "8. Programming Concepts/4. Turtles and Loops._rjs.html#investigate-1",
    "href": "8. Programming Concepts/4. Turtles and Loops._rjs.html#investigate-1",
    "title": "4. Turtles and Loops",
    "section": "Investigate",
    "text": "Investigate\nfor counter in range(4):\n    forward(100)\n    right(90)\nIdentify which parts of the code match these descriptions:\n\nThese two lines will repeat four times\nThis is a stepper variable that goes up by one every time the code repeats\nThis tells us the code inside the loop will repeat four times\nThis word is a Python keyword used for loops (known as iteration)"
  },
  {
    "objectID": "8. Programming Concepts/4. Turtles and Loops._rjs.html#modify-and-make-1",
    "href": "8. Programming Concepts/4. Turtles and Loops._rjs.html#modify-and-make-1",
    "title": "4. Turtles and Loops",
    "section": "Modify and Make",
    "text": "Modify and Make\nfrom turtle import *\n\ndef square():\n    for counter in range(4):\n        forward(100)\n        right(90)\n\nsquare()\nleft(45)\nsquare()\n\nRewrite your previous triangle function so that it uses a for loop.\n\nWrite a function pentagon() to create a pentagon (5 sides) with sides length 200.\nWrite a function hexagon() to create a blue hexagon (6 sides) with sides length 50.\n\nExtension: Create an envelope() function which draws an envelope and check it works (Hint: it will call square() and triangle().)"
  },
  {
    "objectID": "8. Programming Concepts/4. Turtles and Loops._rjs.html#review",
    "href": "8. Programming Concepts/4. Turtles and Loops._rjs.html#review",
    "title": "4. Turtles and Loops",
    "section": "Review",
    "text": "Review\nFill in the SIX gaps to draw a triangle.\nBLANK triangle():\n    for counter BLANK range BLANK:\n        forward BLANK\n        right BLANK"
  },
  {
    "objectID": "8. Programming Concepts/3. More on Selection.html",
    "href": "8. Programming Concepts/3. More on Selection.html",
    "title": "3. More on Selection",
    "section": "",
    "text": "To understand how to write programs that involve more than two choices\n\nTo write a quiz program",
    "crumbs": [
      "8. Programming Concepts",
      "3. More on Selection"
    ]
  },
  {
    "objectID": "8. Programming Concepts/3. More on Selection.html#lesson-objectives",
    "href": "8. Programming Concepts/3. More on Selection.html#lesson-objectives",
    "title": "3. More on Selection",
    "section": "",
    "text": "To understand how to write programs that involve more than two choices\n\nTo write a quiz program",
    "crumbs": [
      "8. Programming Concepts",
      "3. More on Selection"
    ]
  },
  {
    "objectID": "8. Programming Concepts/3. More on Selection.html#predict",
    "href": "8. Programming Concepts/3. More on Selection.html#predict",
    "title": "3. More on Selection",
    "section": "Predict",
    "text": "Predict\nWhat does this code do? Show what you think will be output to the screen.\ndef cooking():\n    print(\"Meal planner\")\n    print()\n    print(\"1. Chicken curry \")\n    print(\"2. Veggie lasagne\")\n    print(\"3. Burger and salad\")\n    print()\n    print(\"Which of these meals is your favourite? (1, 2 or 3) \")\n    answer = input()\n    if answer == \"1\":\n        print(\"Chicken curry coming up\")\n    elif answer == \"2\":\n        print(\"Veggie lasagne coming up\")\n    else:\n        print(\"Burger and salad coming up\")\n    print(\"Enjoy!\")\n\ncooking()",
    "crumbs": [
      "8. Programming Concepts",
      "3. More on Selection"
    ]
  },
  {
    "objectID": "8. Programming Concepts/3. More on Selection.html#run-and-modify",
    "href": "8. Programming Concepts/3. More on Selection.html#run-and-modify",
    "title": "3. More on Selection",
    "section": "Run and Modify",
    "text": "Run and Modify\nOn your own:\n\nDownload the cooking program and check that it does what you thought it would\n\nChange the meals to meals that you like\n\nAdd “None of these as an option”\n\nThen:\n\nMake a new copy of your code and secretly add 5 errors to it\n\nSwap programs with your partner\n\nSee if you can find and correct the 5 errors\n\nWrite comments in the program where you found them",
    "crumbs": [
      "8. Programming Concepts",
      "3. More on Selection"
    ]
  },
  {
    "objectID": "8. Programming Concepts/3. More on Selection.html#make",
    "href": "8. Programming Concepts/3. More on Selection.html#make",
    "title": "3. More on Selection",
    "section": "Make",
    "text": "Make\nUsing your Python skills so far you are going to create a 5-question quiz on Geography.\nSteps:\n\nWrite down 5 questions and 3 possible answers to each\n\nWrite your program\n\nTest all the different options\n\nYou will be scored on:\n\nWhether it works\n\nQuality of your questions\n\nHow well it is presented (spacing, grammar etc.)",
    "crumbs": [
      "8. Programming Concepts",
      "3. More on Selection"
    ]
  },
  {
    "objectID": "8. Programming Concepts/3. More on Selection.html#review",
    "href": "8. Programming Concepts/3. More on Selection.html#review",
    "title": "3. More on Selection",
    "section": "Review",
    "text": "Review\nSwap with someone else and ask them to test your quiz.\nScore the quiz as follows:",
    "crumbs": [
      "8. Programming Concepts",
      "3. More on Selection"
    ]
  },
  {
    "objectID": "8. Programming Concepts/3. More on Selection.html#score-sheet",
    "href": "8. Programming Concepts/3. More on Selection.html#score-sheet",
    "title": "3. More on Selection",
    "section": "Score Sheet",
    "text": "Score Sheet\n\n\n\n\n\n\n\n\n\n\nAmazing\nPretty good\nRoom for improvement\n\n\n\n\nDoes it run without any errors?\n6\n4\n2\n\n\nDo all the questions make sense?\n6\n4\n2\n\n\nIs it well presented?\n6\n4\n2\n\n\nComments and Total score",
    "crumbs": [
      "8. Programming Concepts",
      "3. More on Selection"
    ]
  },
  {
    "objectID": "8. Programming Concepts/3. More on Selection._rjs.html#lesson-objectives",
    "href": "8. Programming Concepts/3. More on Selection._rjs.html#lesson-objectives",
    "title": "3. More on Selection",
    "section": "Lesson Objectives",
    "text": "Lesson Objectives\n\nTo understand how to write programs that involve more than two choices\n\nTo write a quiz program"
  },
  {
    "objectID": "8. Programming Concepts/3. More on Selection._rjs.html#predict",
    "href": "8. Programming Concepts/3. More on Selection._rjs.html#predict",
    "title": "3. More on Selection",
    "section": "Predict",
    "text": "Predict\nWhat does this code do? Show what you think will be output to the screen.\ndef cooking():\n    print(\"Meal planner\")\n    print()\n    print(\"1. Chicken curry \")\n    print(\"2. Veggie lasagne\")\n    print(\"3. Burger and salad\")\n    print()\n    print(\"Which of these meals is your favourite? (1, 2 or 3) \")\n    answer = input()\n    if answer == \"1\":\n        print(\"Chicken curry coming up\")\n    elif answer == \"2\":\n        print(\"Veggie lasagne coming up\")\n    else:\n        print(\"Burger and salad coming up\")\n    print(\"Enjoy!\")\n\ncooking()"
  },
  {
    "objectID": "8. Programming Concepts/3. More on Selection._rjs.html#run-and-modify",
    "href": "8. Programming Concepts/3. More on Selection._rjs.html#run-and-modify",
    "title": "3. More on Selection",
    "section": "Run and Modify",
    "text": "Run and Modify\nOn your own:\n\nDownload the cooking program and check that it does what you thought it would\n\nChange the meals to meals that you like\n\nAdd “None of these as an option”\n\nThen:\n\nMake a new copy of your code and secretly add 5 errors to it\n\nSwap programs with your partner\n\nSee if you can find and correct the 5 errors\n\nWrite comments in the program where you found them"
  },
  {
    "objectID": "8. Programming Concepts/3. More on Selection._rjs.html#make",
    "href": "8. Programming Concepts/3. More on Selection._rjs.html#make",
    "title": "3. More on Selection",
    "section": "Make",
    "text": "Make\nUsing your Python skills so far you are going to create a 5-question quiz on Geography.\nSteps:\n\nWrite down 5 questions and 3 possible answers to each\n\nWrite your program\n\nTest all the different options\n\nYou will be scored on:\n\nWhether it works\n\nQuality of your questions\n\nHow well it is presented (spacing, grammar etc.)"
  },
  {
    "objectID": "8. Programming Concepts/3. More on Selection._rjs.html#review",
    "href": "8. Programming Concepts/3. More on Selection._rjs.html#review",
    "title": "3. More on Selection",
    "section": "Review",
    "text": "Review\nSwap with someone else and ask them to test your quiz.\nScore the quiz as follows:"
  },
  {
    "objectID": "8. Programming Concepts/3. More on Selection._rjs.html#score-sheet",
    "href": "8. Programming Concepts/3. More on Selection._rjs.html#score-sheet",
    "title": "3. More on Selection",
    "section": "Score Sheet",
    "text": "Score Sheet\n\n\n\n\n\n\n\n\n\n\nAmazing\nPretty good\nRoom for improvement\n\n\n\n\nDoes it run without any errors?\n6\n4\n2\n\n\nDo all the questions make sense?\n6\n4\n2\n\n\nIs it well presented?\n6\n4\n2\n\n\nComments and Total score"
  },
  {
    "objectID": "8. Programming Concepts/2. Selection._rjs.html#predict",
    "href": "8. Programming Concepts/2. Selection._rjs.html#predict",
    "title": "2. Selection",
    "section": "Predict",
    "text": "Predict\nHere is some Python code. What would be printed on the screen?\nflowers = 5\ntrees = 10 \nplants = flowers + trees\ntrees = 20\nprint(plants)"
  },
  {
    "objectID": "8. Programming Concepts/2. Selection._rjs.html#predict-1",
    "href": "8. Programming Concepts/2. Selection._rjs.html#predict-1",
    "title": "2. Selection",
    "section": "Predict",
    "text": "Predict\nHere is some Python code. What would be printed on the screen?\nnumber1 = 125\nnumber2 = 100\nnumber3 = number1 - number2\nnumber3 = 10\nnumber1 = 20\nnumber2 = number1 + number2 + number3\nprint(number2)"
  },
  {
    "objectID": "8. Programming Concepts/2. Selection._rjs.html#lesson-objectives",
    "href": "8. Programming Concepts/2. Selection._rjs.html#lesson-objectives",
    "title": "2. Selection",
    "section": "Lesson Objectives",
    "text": "Lesson Objectives\nToday we are using three new Python keywords: def, if, and else.\nBy the end of this lesson, you should be able to:\n\nWrite a function using def\nWrite programs that give different responses depending on what is typed in on the keyboard\nKnow the difference between = and ==."
  },
  {
    "objectID": "8. Programming Concepts/2. Selection._rjs.html#predict-2",
    "href": "8. Programming Concepts/2. Selection._rjs.html#predict-2",
    "title": "2. Selection",
    "section": "Predict",
    "text": "Predict\nIn pairs, look at the program below and write out what you think might happen when it runs.\ndef conversation():\n    print(\"Welcome to my conversation program\")\n    print()\n    print(\"Do you like cycling? Answer yes or no\")\n    answer = input()\n    if answer == \"yes\":\n        print(\"That's good - you will get very fit\")\n    else:\n        print(\"Perhaps you like some other sport.\")\n    print(\"Goodbye\")\n\nconversation()"
  },
  {
    "objectID": "8. Programming Concepts/2. Selection._rjs.html#run",
    "href": "8. Programming Concepts/2. Selection._rjs.html#run",
    "title": "2. Selection",
    "section": "Run",
    "text": "Run\nNow run the program and see if your prediction was correct."
  },
  {
    "objectID": "8. Programming Concepts/2. Selection._rjs.html#investigate",
    "href": "8. Programming Concepts/2. Selection._rjs.html#investigate",
    "title": "2. Selection",
    "section": "Investigate",
    "text": "Investigate\n\nWhat would happen if the program used the word Print() instead of print()?\nWhat would happen if you type “Yes” instead of “yes” or “no” when running the program? (try it and see)\nWhat is def used for?\nWhy does the program include conversation() at the bottom of the program?\nWhy do you need a colon : at the end of the if statement and the word else?\nWhat is the difference between = and ==? Both are used in this program.\nWhat would be the difference between running these two lines:\n\nanswer = input()\nanswer = input(\"Select 1 or 2...\")\n\nWhy is print(\"Goodbye\") a few spaces left of the lines above. What happens if you change this?"
  },
  {
    "objectID": "8. Programming Concepts/2. Selection._rjs.html#modify-and-make",
    "href": "8. Programming Concepts/2. Selection._rjs.html#modify-and-make",
    "title": "2. Selection",
    "section": "Modify and Make",
    "text": "Modify and Make\nTry these challenges:\n\nModify the program to have a conversation with somebody about sport. An example is given below but you can add your own questions.\nNow write a function cities() and ask “How many cities are there in England?”. Now you are asking a question with a numeric answer — use int(input(...)) to do this. The extra int() wrapped around the input will convert what you typed in into a whole number.\nWrite a new program to ask the user to enter a number bigger than 10. Give them some feedback if they have entered a valid number or not. Remember to use int(input()) — see what error you get if you forget to use it.\nNow ask the user for their score in a test. If they got less than 50 tell them that they have failed the test, otherwise tell them they have passed.\nNow ask the user of your program for their age. If they are 13 or over tell them they can have a paper round.\nWrite a program to ask the user to enter any number. As long as the number is NOT 99 that’s OK.\nTest that the number is not 99 by using if number != 99.\n\nExtension\nWrite a program that asks the user to enter a number between 1 and 20. You can use if to check the condition.\nGive them positive feedback if it’s OK and say “too low” if it’s less than 1, and “too high” if it’s more than 20.\nMake a note of any errors that you come across and how you fixed them."
  },
  {
    "objectID": "8. Programming Concepts/2. Selection._rjs.html#review",
    "href": "8. Programming Concepts/2. Selection._rjs.html#review",
    "title": "2. Selection",
    "section": "Review",
    "text": "Review\ndef questions():\n    print(\"What is the capital of France?\")\n    answer = input()\n    if answer == \"Paris\":\n        print(\"Correct!\")\n    else:\n        print(\"No, that's not correct\")\n\n    # what is the difference with the question below?\n    answer = input(\"What is the capital of Norway? \")\n    if answer == \"Oslo\":\n        print(\"Correct!\")\n    else:\n        print(\"No, that's not correct\")\n\nquestions()\nWhat is the difference between the two questions when they appear on the screen?"
  },
  {
    "objectID": "8. Programming Concepts/2. Selection.html",
    "href": "8. Programming Concepts/2. Selection.html",
    "title": "2. Selection",
    "section": "",
    "text": "Here is some Python code. What would be printed on the screen?\nflowers = 5\ntrees = 10 \nplants = flowers + trees\ntrees = 20\nprint(plants)",
    "crumbs": [
      "8. Programming Concepts",
      "2. Selection"
    ]
  },
  {
    "objectID": "8. Programming Concepts/2. Selection.html#predict",
    "href": "8. Programming Concepts/2. Selection.html#predict",
    "title": "2. Selection",
    "section": "",
    "text": "Here is some Python code. What would be printed on the screen?\nflowers = 5\ntrees = 10 \nplants = flowers + trees\ntrees = 20\nprint(plants)",
    "crumbs": [
      "8. Programming Concepts",
      "2. Selection"
    ]
  },
  {
    "objectID": "8. Programming Concepts/2. Selection.html#predict-1",
    "href": "8. Programming Concepts/2. Selection.html#predict-1",
    "title": "2. Selection",
    "section": "Predict",
    "text": "Predict\nHere is some Python code. What would be printed on the screen?\nnumber1 = 125\nnumber2 = 100\nnumber3 = number1 - number2\nnumber3 = 10\nnumber1 = 20\nnumber2 = number1 + number2 + number3\nprint(number2)",
    "crumbs": [
      "8. Programming Concepts",
      "2. Selection"
    ]
  },
  {
    "objectID": "8. Programming Concepts/2. Selection.html#lesson-objectives",
    "href": "8. Programming Concepts/2. Selection.html#lesson-objectives",
    "title": "2. Selection",
    "section": "Lesson Objectives",
    "text": "Lesson Objectives\nToday we are using three new Python keywords: def, if, and else.\nBy the end of this lesson, you should be able to:\n\nWrite a function using def\nWrite programs that give different responses depending on what is typed in on the keyboard\nKnow the difference between = and ==.",
    "crumbs": [
      "8. Programming Concepts",
      "2. Selection"
    ]
  },
  {
    "objectID": "8. Programming Concepts/2. Selection.html#predict-2",
    "href": "8. Programming Concepts/2. Selection.html#predict-2",
    "title": "2. Selection",
    "section": "Predict",
    "text": "Predict\nIn pairs, look at the program below and write out what you think might happen when it runs.\ndef conversation():\n    print(\"Welcome to my conversation program\")\n    print()\n    print(\"Do you like cycling? Answer yes or no\")\n    answer = input()\n    if answer == \"yes\":\n        print(\"That's good - you will get very fit\")\n    else:\n        print(\"Perhaps you like some other sport.\")\n    print(\"Goodbye\")\n\nconversation()",
    "crumbs": [
      "8. Programming Concepts",
      "2. Selection"
    ]
  },
  {
    "objectID": "8. Programming Concepts/2. Selection.html#run",
    "href": "8. Programming Concepts/2. Selection.html#run",
    "title": "2. Selection",
    "section": "Run",
    "text": "Run\nNow run the program and see if your prediction was correct.",
    "crumbs": [
      "8. Programming Concepts",
      "2. Selection"
    ]
  },
  {
    "objectID": "8. Programming Concepts/2. Selection.html#investigate",
    "href": "8. Programming Concepts/2. Selection.html#investigate",
    "title": "2. Selection",
    "section": "Investigate",
    "text": "Investigate\n\nWhat would happen if the program used the word Print() instead of print()?\nWhat would happen if you type “Yes” instead of “yes” or “no” when running the program? (try it and see)\nWhat is def used for?\nWhy does the program include conversation() at the bottom of the program?\nWhy do you need a colon : at the end of the if statement and the word else?\nWhat is the difference between = and ==? Both are used in this program.\nWhat would be the difference between running these two lines:\n\nanswer = input()\nanswer = input(\"Select 1 or 2...\")\n\nWhy is print(\"Goodbye\") a few spaces left of the lines above. What happens if you change this?",
    "crumbs": [
      "8. Programming Concepts",
      "2. Selection"
    ]
  },
  {
    "objectID": "8. Programming Concepts/2. Selection.html#modify-and-make",
    "href": "8. Programming Concepts/2. Selection.html#modify-and-make",
    "title": "2. Selection",
    "section": "Modify and Make",
    "text": "Modify and Make\nTry these challenges:\n\nModify the program to have a conversation with somebody about sport. An example is given below but you can add your own questions.\nNow write a function cities() and ask “How many cities are there in England?”. Now you are asking a question with a numeric answer — use int(input(...)) to do this. The extra int() wrapped around the input will convert what you typed in into a whole number.\nWrite a new program to ask the user to enter a number bigger than 10. Give them some feedback if they have entered a valid number or not. Remember to use int(input()) — see what error you get if you forget to use it.\nNow ask the user for their score in a test. If they got less than 50 tell them that they have failed the test, otherwise tell them they have passed.\nNow ask the user of your program for their age. If they are 13 or over tell them they can have a paper round.\nWrite a program to ask the user to enter any number. As long as the number is NOT 99 that’s OK.\nTest that the number is not 99 by using if number != 99.\n\n\nExtension\nWrite a program that asks the user to enter a number between 1 and 20. You can use if to check the condition.\nGive them positive feedback if it’s OK and say “too low” if it’s less than 1, and “too high” if it’s more than 20.\nMake a note of any errors that you come across and how you fixed them.",
    "crumbs": [
      "8. Programming Concepts",
      "2. Selection"
    ]
  },
  {
    "objectID": "8. Programming Concepts/2. Selection.html#review",
    "href": "8. Programming Concepts/2. Selection.html#review",
    "title": "2. Selection",
    "section": "Review",
    "text": "Review\ndef questions():\n    print(\"What is the capital of France?\")\n    answer = input()\n    if answer == \"Paris\":\n        print(\"Correct!\")\n    else:\n        print(\"No, that's not correct\")\n\n    # what is the difference with the question below?\n    answer = input(\"What is the capital of Norway? \")\n    if answer == \"Oslo\":\n        print(\"Correct!\")\n    else:\n        print(\"No, that's not correct\")\n\nquestions()\nWhat is the difference between the two questions when they appear on the screen?",
    "crumbs": [
      "8. Programming Concepts",
      "2. Selection"
    ]
  },
  {
    "objectID": "8. Programming Concepts/5. Turtles and Loops 2._rjs.html#recap",
    "href": "8. Programming Concepts/5. Turtles and Loops 2._rjs.html#recap",
    "title": "5. Turtles and Loops 2",
    "section": "Recap",
    "text": "Recap\nCan you find the errors in this program?\ndef triangle():\n    # this function draws a triangle\n    for counter in range(3):\n        forward(120)\n        right(120)"
  },
  {
    "objectID": "8. Programming Concepts/5. Turtles and Loops 2._rjs.html#lesson-objectives",
    "href": "8. Programming Concepts/5. Turtles and Loops 2._rjs.html#lesson-objectives",
    "title": "5. Turtles and Loops 2",
    "section": "Lesson Objectives",
    "text": "Lesson Objectives\nIn this lesson you will:\n\nMake more shapes using Python turtle graphics\n\nPractise using the for loop\n\nLearn to pass data into a function using a parameter\n\nUse parameters to make more user-friendly programs"
  },
  {
    "objectID": "8. Programming Concepts/5. Turtles and Loops 2._rjs.html#predict-and-run",
    "href": "8. Programming Concepts/5. Turtles and Loops 2._rjs.html#predict-and-run",
    "title": "5. Turtles and Loops 2",
    "section": "Predict and Run",
    "text": "Predict and Run\nPredict what diagram this code will draw.\ndef demo():\n    pencolor(\"red\")\n    for counter in range(20):\n        forward(150)\n        right(100)\nIf you are struggling, look at the sheet for two possible options."
  },
  {
    "objectID": "8. Programming Concepts/5. Turtles and Loops 2._rjs.html#modify-and-make",
    "href": "8. Programming Concepts/5. Turtles and Loops 2._rjs.html#modify-and-make",
    "title": "5. Turtles and Loops 2",
    "section": "Modify and Make",
    "text": "Modify and Make\nUsing the code below, complete the tasks on the next slide.\nfrom turtle import *\n    \ndef small_square():\n    for counter in range(4):\n        forward(50)\n        right(90)\n\ndef large_square():\n    for counter in range(4):\n        forward(150)\n        right(90)\n\ndef any_square(length):\n    for counter in range(4):\n        forward(length)\n        right(90)\n    \ndef main():\n    small_square()\n    large_square()\n    length = int(input(\"Enter length of the square   \"))\n    any_square(length)\n    \nmain()"
  },
  {
    "objectID": "8. Programming Concepts/5. Turtles and Loops 2._rjs.html#modify-and-make-1",
    "href": "8. Programming Concepts/5. Turtles and Loops 2._rjs.html#modify-and-make-1",
    "title": "5. Turtles and Loops 2",
    "section": "Modify and Make",
    "text": "Modify and Make\n\nChange the starter program to make a blue hexagon using a for loop\n\nChange the angle to 95° and see if you can draw the following shape\n\nThe following code will draw a petal of a flower. Use it inside a for loop to draw a flower\n\ndef petal():\n    circle(50, 120)\n    left(60)\n    circle(50, 120)\n\nNow can you make a similar flower in two colours similar to (or better than!) the one on the sheet. Use begin_fill()``,fillcolor(“red”)and `end_fill() to colour in shapes.\nUse the triangle function to draw more shapes. Write a function that calls the triangle function inside a loop to make the exact picture shown on the sheet."
  },
  {
    "objectID": "8. Programming Concepts/5. Turtles and Loops 2._rjs.html#predict",
    "href": "8. Programming Concepts/5. Turtles and Loops 2._rjs.html#predict",
    "title": "5. Turtles and Loops 2",
    "section": "Predict",
    "text": "Predict\nIn pairs, predict what running the function main() would do.\ndef small_square():\n    for counter in range(4):\n        forward(50)\n        right(90)\n\n\ndef large_square():\n    for counter in range(4):\n        forward(150)\n        right(90)\n\n\ndef any_square(length):\n    for counter in range(4):\n        forward(length)\n        right(90)\n\ndef main():\n    small_square()\n    large_square()\n    length = int(input(\"Enter length of the square \"))\n    any_square(length)"
  },
  {
    "objectID": "8. Programming Concepts/5. Turtles and Loops 2._rjs.html#using-a-parameter",
    "href": "8. Programming Concepts/5. Turtles and Loops 2._rjs.html#using-a-parameter",
    "title": "5. Turtles and Loops 2",
    "section": "Using a Parameter",
    "text": "Using a Parameter\nExamples:\ndef any_square(length):\n    for counter in range(4):\n        forward(length)\n        right(90)\n\nany_square(50)   # draws a square with side length 50\nany_square(150)  # draws a square with side length 150\nany_square(60)   # draws a square with side length 60\nLength is a parameter used to pass data into the function any_square."
  },
  {
    "objectID": "8. Programming Concepts/5. Turtles and Loops 2._rjs.html#modify-and-make-2",
    "href": "8. Programming Concepts/5. Turtles and Loops 2._rjs.html#modify-and-make-2",
    "title": "5. Turtles and Loops 2",
    "section": "Modify and Make",
    "text": "Modify and Make\nNow complete these tasks:\n\nModify your square function so that you can input the length of the sides and draw squares of different sizes\n\nModify your triangle function so that you can input the length of the sides and draw triangles of different sizes\n\nExtension:\nWrite a general-purpose function polygon(sides) so that polygon(4) will draw a square and polygon(6) will draw a hexagon."
  },
  {
    "objectID": "8. Programming Concepts/5. Turtles and Loops 2._rjs.html#review",
    "href": "8. Programming Concepts/5. Turtles and Loops 2._rjs.html#review",
    "title": "5. Turtles and Loops 2",
    "section": "Review",
    "text": "Review\nWrite out what code you might need in house() to draw a house, using only the functions square() and triangle().\nfrom turtle import *\n\ndef square(length):\n    for counter in range(4):\n        forward(length)\n        right(90)\n\ndef triangle(length):\n    for counter in range(3):\n        forward(length)\n        right(120)\n\ndef house():\n    # your code goes here\n\nhouse()"
  },
  {
    "objectID": "8. Programming Concepts/5. Turtles and Loops 2._rjs.html#key-concepts",
    "href": "8. Programming Concepts/5. Turtles and Loops 2._rjs.html#key-concepts",
    "title": "5. Turtles and Loops 2",
    "section": "Key Concepts",
    "text": "Key Concepts\n\nThe for loop is one kind of loop.\n\nIt uses a counter which takes on a value every time the loop iterates.\n\nIn the syllabus, this is called a count controlled loop.\n\nThe range() function indicates how many times the statement will repeat. For example:\n\nrange(4) means repeat 4 times\n\nrange(10) means repeat 10 times\n\n\nIn fact, range(4) generates four numbers: 0, 1, 2, 3.\n\nThe counter takes on each value one at a time.\n\nBecause there are four numbers to take the value of, there are four repeats."
  },
  {
    "objectID": "8. Programming Concepts/5. Turtles and Loops 2.html",
    "href": "8. Programming Concepts/5. Turtles and Loops 2.html",
    "title": "5. Turtles and Loops 2",
    "section": "",
    "text": "Can you find the errors in this program?\ndef triangle():\n    # this function draws a triangle\n    for counter in range(3):\n        forward(120)\n        right(120)",
    "crumbs": [
      "8. Programming Concepts",
      "5. Turtles and Loops 2"
    ]
  },
  {
    "objectID": "8. Programming Concepts/5. Turtles and Loops 2.html#recap",
    "href": "8. Programming Concepts/5. Turtles and Loops 2.html#recap",
    "title": "5. Turtles and Loops 2",
    "section": "",
    "text": "Can you find the errors in this program?\ndef triangle():\n    # this function draws a triangle\n    for counter in range(3):\n        forward(120)\n        right(120)",
    "crumbs": [
      "8. Programming Concepts",
      "5. Turtles and Loops 2"
    ]
  },
  {
    "objectID": "8. Programming Concepts/5. Turtles and Loops 2.html#lesson-objectives",
    "href": "8. Programming Concepts/5. Turtles and Loops 2.html#lesson-objectives",
    "title": "5. Turtles and Loops 2",
    "section": "Lesson Objectives",
    "text": "Lesson Objectives\nIn this lesson you will:\n\nMake more shapes using Python turtle graphics\n\nPractise using the for loop\n\nLearn to pass data into a function using a parameter\n\nUse parameters to make more user-friendly programs",
    "crumbs": [
      "8. Programming Concepts",
      "5. Turtles and Loops 2"
    ]
  },
  {
    "objectID": "8. Programming Concepts/5. Turtles and Loops 2.html#predict-and-run",
    "href": "8. Programming Concepts/5. Turtles and Loops 2.html#predict-and-run",
    "title": "5. Turtles and Loops 2",
    "section": "Predict and Run",
    "text": "Predict and Run\nPredict what diagram this code will draw.\ndef demo():\n    pencolor(\"red\")\n    for counter in range(20):\n        forward(150)\n        right(100)\nIf you are struggling, look at the sheet for two possible options.",
    "crumbs": [
      "8. Programming Concepts",
      "5. Turtles and Loops 2"
    ]
  },
  {
    "objectID": "8. Programming Concepts/5. Turtles and Loops 2.html#modify-and-make",
    "href": "8. Programming Concepts/5. Turtles and Loops 2.html#modify-and-make",
    "title": "5. Turtles and Loops 2",
    "section": "Modify and Make",
    "text": "Modify and Make\nUsing the code below, complete the tasks on the next slide.\nfrom turtle import *\n    \ndef small_square():\n    for counter in range(4):\n        forward(50)\n        right(90)\n\ndef large_square():\n    for counter in range(4):\n        forward(150)\n        right(90)\n\ndef any_square(length):\n    for counter in range(4):\n        forward(length)\n        right(90)\n    \ndef main():\n    small_square()\n    large_square()\n    length = int(input(\"Enter length of the square   \"))\n    any_square(length)\n    \nmain()",
    "crumbs": [
      "8. Programming Concepts",
      "5. Turtles and Loops 2"
    ]
  },
  {
    "objectID": "8. Programming Concepts/5. Turtles and Loops 2.html#modify-and-make-1",
    "href": "8. Programming Concepts/5. Turtles and Loops 2.html#modify-and-make-1",
    "title": "5. Turtles and Loops 2",
    "section": "Modify and Make",
    "text": "Modify and Make\n\nChange the starter program to make a blue hexagon using a for loop\n\nChange the angle to 95° and see if you can draw the following shape\n\nThe following code will draw a petal of a flower. Use it inside a for loop to draw a flower\n\ndef petal():\n    circle(50, 120)\n    left(60)\n    circle(50, 120)\n\nNow can you make a similar flower in two colours similar to (or better than!) the one on the sheet. Use begin_fill()``,fillcolor(“red”)and `end_fill() to colour in shapes.\nUse the triangle function to draw more shapes. Write a function that calls the triangle function inside a loop to make the exact picture shown on the sheet.",
    "crumbs": [
      "8. Programming Concepts",
      "5. Turtles and Loops 2"
    ]
  },
  {
    "objectID": "8. Programming Concepts/5. Turtles and Loops 2.html#predict",
    "href": "8. Programming Concepts/5. Turtles and Loops 2.html#predict",
    "title": "5. Turtles and Loops 2",
    "section": "Predict",
    "text": "Predict\nIn pairs, predict what running the function main() would do.\ndef small_square():\n    for counter in range(4):\n        forward(50)\n        right(90)\n\n\ndef large_square():\n    for counter in range(4):\n        forward(150)\n        right(90)\n\n\ndef any_square(length):\n    for counter in range(4):\n        forward(length)\n        right(90)\n\ndef main():\n    small_square()\n    large_square()\n    length = int(input(\"Enter length of the square \"))\n    any_square(length)",
    "crumbs": [
      "8. Programming Concepts",
      "5. Turtles and Loops 2"
    ]
  },
  {
    "objectID": "8. Programming Concepts/5. Turtles and Loops 2.html#using-a-parameter",
    "href": "8. Programming Concepts/5. Turtles and Loops 2.html#using-a-parameter",
    "title": "5. Turtles and Loops 2",
    "section": "Using a Parameter",
    "text": "Using a Parameter\nExamples:\ndef any_square(length):\n    for counter in range(4):\n        forward(length)\n        right(90)\n\nany_square(50)   # draws a square with side length 50\nany_square(150)  # draws a square with side length 150\nany_square(60)   # draws a square with side length 60\nLength is a parameter used to pass data into the function any_square.",
    "crumbs": [
      "8. Programming Concepts",
      "5. Turtles and Loops 2"
    ]
  },
  {
    "objectID": "8. Programming Concepts/5. Turtles and Loops 2.html#modify-and-make-2",
    "href": "8. Programming Concepts/5. Turtles and Loops 2.html#modify-and-make-2",
    "title": "5. Turtles and Loops 2",
    "section": "Modify and Make",
    "text": "Modify and Make\nNow complete these tasks:\n\nModify your square function so that you can input the length of the sides and draw squares of different sizes\n\nModify your triangle function so that you can input the length of the sides and draw triangles of different sizes\n\nExtension:\nWrite a general-purpose function polygon(sides) so that polygon(4) will draw a square and polygon(6) will draw a hexagon.",
    "crumbs": [
      "8. Programming Concepts",
      "5. Turtles and Loops 2"
    ]
  },
  {
    "objectID": "8. Programming Concepts/5. Turtles and Loops 2.html#review",
    "href": "8. Programming Concepts/5. Turtles and Loops 2.html#review",
    "title": "5. Turtles and Loops 2",
    "section": "Review",
    "text": "Review\nWrite out what code you might need in house() to draw a house, using only the functions square() and triangle().\nfrom turtle import *\n\ndef square(length):\n    for counter in range(4):\n        forward(length)\n        right(90)\n\ndef triangle(length):\n    for counter in range(3):\n        forward(length)\n        right(120)\n\ndef house():\n    # your code goes here\n\nhouse()",
    "crumbs": [
      "8. Programming Concepts",
      "5. Turtles and Loops 2"
    ]
  },
  {
    "objectID": "8. Programming Concepts/5. Turtles and Loops 2.html#key-concepts",
    "href": "8. Programming Concepts/5. Turtles and Loops 2.html#key-concepts",
    "title": "5. Turtles and Loops 2",
    "section": "Key Concepts",
    "text": "Key Concepts\n\nThe for loop is one kind of loop.\n\nIt uses a counter which takes on a value every time the loop iterates.\n\nIn the syllabus, this is called a count controlled loop.\n\nThe range() function indicates how many times the statement will repeat. For example:\n\nrange(4) means repeat 4 times\n\nrange(10) means repeat 10 times\n\n\nIn fact, range(4) generates four numbers: 0, 1, 2, 3.\n\nThe counter takes on each value one at a time.\n\nBecause there are four numbers to take the value of, there are four repeats.",
    "crumbs": [
      "8. Programming Concepts",
      "5. Turtles and Loops 2"
    ]
  },
  {
    "objectID": "8. Programming Concepts/1. Recap._rjs.html#lesson-objectives",
    "href": "8. Programming Concepts/1. Recap._rjs.html#lesson-objectives",
    "title": "1. Recap",
    "section": "Lesson objectives",
    "text": "Lesson objectives\nBy the end of this lesson you will be able to:\n\nWrite simple Python programs\n\nRead input from the keyboard with input()\n\nWrite print() statements that include a variable\n\nYou should understand what print() and input() do and how to use them in a Python program."
  },
  {
    "objectID": "8. Programming Concepts/1. Recap._rjs.html#predict",
    "href": "8. Programming Concepts/1. Recap._rjs.html#predict",
    "title": "1. Recap",
    "section": "Predict",
    "text": "Predict\nDiscuss in pairs: what does this code do?\nname = \"Billy\"\nprint(\"We want to know if you like programming!\")\nprint()\nprint(\"Do you like programming \" + name + \"?\")\nanswer = input() # Let's say user enters \"Yes\"\nprint(\"Great! You said \" + answer + \"!!\")\nprint(\"Let's learn some Python today\")"
  },
  {
    "objectID": "8. Programming Concepts/1. Recap._rjs.html#run",
    "href": "8. Programming Concepts/1. Recap._rjs.html#run",
    "title": "1. Recap",
    "section": "Run",
    "text": "Run\nRun the code to see if you were right."
  },
  {
    "objectID": "8. Programming Concepts/1. Recap._rjs.html#investigate",
    "href": "8. Programming Concepts/1. Recap._rjs.html#investigate",
    "title": "1. Recap",
    "section": "Investigate",
    "text": "Investigate\nAnswer on the sheet or in your exercise book:\n\nHow many variables can you find in the program, and what are they used for?\n\nprint() is a function that displays to the screen. What other function is used, and what does it do?\n\nWhat is the + being used for in this program?\n\nWhat happens when you call print() with nothing inside the brackets?"
  },
  {
    "objectID": "8. Programming Concepts/1. Recap._rjs.html#modify",
    "href": "8. Programming Concepts/1. Recap._rjs.html#modify",
    "title": "1. Recap",
    "section": "Modify",
    "text": "Modify\n\nChange the program so it uses your name instead of “Billy”.\n\nMake it so the user can type the answer on the same line as the question.\n\nAsk the user their name at the beginning of the program.\n\nAsk the user three questions (e.g. name, breakfast, favourite colour). Give a suitable response after each answer.\n\nAsk another person to try your program."
  },
  {
    "objectID": "8. Programming Concepts/1. Recap._rjs.html#extension",
    "href": "8. Programming Concepts/1. Recap._rjs.html#extension",
    "title": "1. Recap",
    "section": "Extension",
    "text": "Extension\n\nAdd simple validation (reject blank answers, ask again).\n\nPersonalise the final message using all three answers.\n\nChallenge: format output with f-strings instead of concatenation."
  },
  {
    "objectID": "8. Programming Concepts/1. Recap._rjs.html#debugging",
    "href": "8. Programming Concepts/1. Recap._rjs.html#debugging",
    "title": "1. Recap",
    "section": "Debugging",
    "text": "Debugging\nThere are five mistakes in this code.\n\nWork with a partner to find and fix them.\n\nExplain each bug and the fix in a sentence.\n\nname = \"Billy\"\nprint(\"We want to know if you like progamming!)\nprint()\nprint(\"Do you like programming \" + Name + \"?\")\nanswer = input(\nPrint(\"Great! You said \" + anwer + \"!\")\nprint(\"Let's learn some Python today\")"
  },
  {
    "objectID": "8. Programming Concepts/1. Recap.html",
    "href": "8. Programming Concepts/1. Recap.html",
    "title": "1. Recap",
    "section": "",
    "text": "By the end of this lesson you will be able to:\n\nWrite simple Python programs\n\nRead input from the keyboard with input()\n\nWrite print() statements that include a variable\n\nYou should understand what print() and input() do and how to use them in a Python program.",
    "crumbs": [
      "8. Programming Concepts",
      "1. Recap"
    ]
  },
  {
    "objectID": "8. Programming Concepts/1. Recap.html#lesson-objectives",
    "href": "8. Programming Concepts/1. Recap.html#lesson-objectives",
    "title": "1. Recap",
    "section": "",
    "text": "By the end of this lesson you will be able to:\n\nWrite simple Python programs\n\nRead input from the keyboard with input()\n\nWrite print() statements that include a variable\n\nYou should understand what print() and input() do and how to use them in a Python program.",
    "crumbs": [
      "8. Programming Concepts",
      "1. Recap"
    ]
  },
  {
    "objectID": "8. Programming Concepts/1. Recap.html#predict",
    "href": "8. Programming Concepts/1. Recap.html#predict",
    "title": "1. Recap",
    "section": "Predict",
    "text": "Predict\nDiscuss in pairs: what does this code do?\nname = \"Billy\"\nprint(\"We want to know if you like programming!\")\nprint()\nprint(\"Do you like programming \" + name + \"?\")\nanswer = input() # Let's say user enters \"Yes\"\nprint(\"Great! You said \" + answer + \"!!\")\nprint(\"Let's learn some Python today\")",
    "crumbs": [
      "8. Programming Concepts",
      "1. Recap"
    ]
  },
  {
    "objectID": "8. Programming Concepts/1. Recap.html#run",
    "href": "8. Programming Concepts/1. Recap.html#run",
    "title": "1. Recap",
    "section": "Run",
    "text": "Run\nRun the code to see if you were right.",
    "crumbs": [
      "8. Programming Concepts",
      "1. Recap"
    ]
  },
  {
    "objectID": "8. Programming Concepts/1. Recap.html#investigate",
    "href": "8. Programming Concepts/1. Recap.html#investigate",
    "title": "1. Recap",
    "section": "Investigate",
    "text": "Investigate\nAnswer on the sheet or in your exercise book:\n\nHow many variables can you find in the program, and what are they used for?\n\nprint() is a function that displays to the screen. What other function is used, and what does it do?\n\nWhat is the + being used for in this program?\n\nWhat happens when you call print() with nothing inside the brackets?",
    "crumbs": [
      "8. Programming Concepts",
      "1. Recap"
    ]
  },
  {
    "objectID": "8. Programming Concepts/1. Recap.html#modify",
    "href": "8. Programming Concepts/1. Recap.html#modify",
    "title": "1. Recap",
    "section": "Modify",
    "text": "Modify\n\nChange the program so it uses your name instead of “Billy”.\n\nMake it so the user can type the answer on the same line as the question.\n\nAsk the user their name at the beginning of the program.\n\nAsk the user three questions (e.g. name, breakfast, favourite colour). Give a suitable response after each answer.\n\nAsk another person to try your program.",
    "crumbs": [
      "8. Programming Concepts",
      "1. Recap"
    ]
  },
  {
    "objectID": "8. Programming Concepts/1. Recap.html#extension",
    "href": "8. Programming Concepts/1. Recap.html#extension",
    "title": "1. Recap",
    "section": "Extension",
    "text": "Extension\n\nAdd simple validation (reject blank answers, ask again).\n\nPersonalise the final message using all three answers.\n\nChallenge: format output with f-strings instead of concatenation.",
    "crumbs": [
      "8. Programming Concepts",
      "1. Recap"
    ]
  },
  {
    "objectID": "8. Programming Concepts/1. Recap.html#debugging",
    "href": "8. Programming Concepts/1. Recap.html#debugging",
    "title": "1. Recap",
    "section": "Debugging",
    "text": "Debugging\nThere are five mistakes in this code.\n\nWork with a partner to find and fix them.\n\nExplain each bug and the fix in a sentence.\n\nname = \"Billy\"\nprint(\"We want to know if you like progamming!)\nprint()\nprint(\"Do you like programming \" + Name + \"?\")\nanswer = input(\nPrint(\"Great! You said \" + anwer + \"!\")\nprint(\"Let's learn some Python today\")",
    "crumbs": [
      "8. Programming Concepts",
      "1. Recap"
    ]
  },
  {
    "objectID": "8. Programming Concepts/6. While Loops.html",
    "href": "8. Programming Concepts/6. While Loops.html",
    "title": "6. While Loops",
    "section": "",
    "text": "What does this code do? Write down the output.\ndef starter():\n    number = 0\n    while number &lt;= 5:\n        print(\"Hello\")\n        number = number + 1\n    print(\"Goodbye\")\n\nstarter()",
    "crumbs": [
      "8. Programming Concepts",
      "6. While Loops"
    ]
  },
  {
    "objectID": "8. Programming Concepts/6. While Loops.html#predict",
    "href": "8. Programming Concepts/6. While Loops.html#predict",
    "title": "6. While Loops",
    "section": "",
    "text": "What does this code do? Write down the output.\ndef starter():\n    number = 0\n    while number &lt;= 5:\n        print(\"Hello\")\n        number = number + 1\n    print(\"Goodbye\")\n\nstarter()",
    "crumbs": [
      "8. Programming Concepts",
      "6. While Loops"
    ]
  },
  {
    "objectID": "8. Programming Concepts/6. While Loops.html#run",
    "href": "8. Programming Concepts/6. While Loops.html#run",
    "title": "6. While Loops",
    "section": "Run",
    "text": "Run\nNow run it. Were you correct?",
    "crumbs": [
      "8. Programming Concepts",
      "6. While Loops"
    ]
  },
  {
    "objectID": "8. Programming Concepts/6. While Loops.html#lesson-objectives",
    "href": "8. Programming Concepts/6. While Loops.html#lesson-objectives",
    "title": "6. While Loops",
    "section": "Lesson Objectives",
    "text": "Lesson Objectives\n\nIntroduce the while loop in Python\n\nLearn to use a while loop in a program\n\nLearn to trace a program to keep track of what it is doing",
    "crumbs": [
      "8. Programming Concepts",
      "6. While Loops"
    ]
  },
  {
    "objectID": "8. Programming Concepts/6. While Loops.html#invesigate",
    "href": "8. Programming Concepts/6. While Loops.html#invesigate",
    "title": "6. While Loops",
    "section": "Invesigate",
    "text": "Invesigate\nTo work out what a program will do, it can be helpful to perform a trace.\ncounter = 1\nwhile counter &lt; 4:\n    print(\"Happy days\")\n    counter = counter + 1\nprint(\"End of program\")\nThis means doing the following:\n\nCreating a trace table for the values of variables\nDrawing arrows to show the order of execution\nWriting down what is printed at each step",
    "crumbs": [
      "8. Programming Concepts",
      "6. While Loops"
    ]
  },
  {
    "objectID": "8. Programming Concepts/6. While Loops.html#your-turn",
    "href": "8. Programming Concepts/6. While Loops.html#your-turn",
    "title": "6. While Loops",
    "section": "Your Turn",
    "text": "Your Turn\nWhat is printed?\ndef input_name():\n    name = input(\"What is your name? \")\n    counter = 1\n    while counter &lt;= 4:\n        print(\"Hello \" + name)\n        counter = counter + 1\n    print(\"Goodbye \" + name)",
    "crumbs": [
      "8. Programming Concepts",
      "6. While Loops"
    ]
  },
  {
    "objectID": "8. Programming Concepts/6. While Loops.html#make",
    "href": "8. Programming Concepts/6. While Loops.html#make",
    "title": "6. While Loops",
    "section": "Make",
    "text": "Make\n\nWrite a program that writes “Today is Monday” one hundred times using a while loop. Compare this to the way that we might have done this last week with a for loop.\nWrite a program that asks the user for the name of the recent storm and keeps asking until they put in the name “Doris”. Here is some code to get your started.\n\nprint(\"What is the name of the recent storm? \")\nanswer = input()\nOR\nanswer = input(\"What is the name of the recent storm? \")\n\nWrite a program that asks the user for a number until they put in 99. When they put in 99 the program stops.\nWrite a function bored() using a while loop that has the output shown to the right. Start with:\n\ndef bored():\nExample run:\n&gt;&gt;&gt; bored()\nAre you bored yet? n\nAre you bored yet? n\nAre you bored yet? n\nAre you bored yet? n\nAre you bored yet? n\nAre you bored yet? n\nAre you bored yet? y\nGot to you in the end!!\n\nWrite a program that prints 1 to 10 on separate lines. You can do this with a while loop or a for loop. Try to do it both ways.\nNow change your program from (5) so that it prints the numbers from 10–1.\nThe program below asks the user for a password. When does the program stop? Run it and see.\n\nNext add some code to count how many tries the user has had and print that out at the end of the program.\nHow else might you improve this program?\ndef logging_in():\n    print(\"Enter your password on the next line \")\n    password = input()\n    while password != \"secret\":\n        print(\"That password is not the one stored \")\n        print(\"Try again!\")\n        password = input()\n    print(\"Yes that's the correct password!\")\n\nImprove the quiz you wrote in week 3 by adding a while loop. Keep asking the question until the user gets it right.",
    "crumbs": [
      "8. Programming Concepts",
      "6. While Loops"
    ]
  },
  {
    "objectID": "8. Programming Concepts/6. While Loops.html#review",
    "href": "8. Programming Concepts/6. While Loops.html#review",
    "title": "6. While Loops",
    "section": "Review",
    "text": "Review\nMatch the keyword to the code\nA. Iteration\nB. Selection\nC. Sequence\nNow write three more examples of sequence, selection, iteration.\n#1\nwhile number &lt;= 5:\n    print(\"Hello\")\n    number = number + 1\n\n#2\nnumber1 = 5\nnumber2 = 10\nsum_add = number1 + number2\nsum_mult = number1 * number2\n\n#3\nif weather == \"raining\":\n    print(\"Take an umbrella!\")",
    "crumbs": [
      "8. Programming Concepts",
      "6. While Loops"
    ]
  },
  {
    "objectID": "8. Programming Concepts/6. While Loops._rjs.html#predict",
    "href": "8. Programming Concepts/6. While Loops._rjs.html#predict",
    "title": "6. While Loops",
    "section": "Predict",
    "text": "Predict\nWhat does this code do? Write down the output.\ndef starter():\n    number = 0\n    while number &lt;= 5:\n        print(\"Hello\")\n        number = number + 1\n    print(\"Goodbye\")\n\nstarter()"
  },
  {
    "objectID": "8. Programming Concepts/6. While Loops._rjs.html#run",
    "href": "8. Programming Concepts/6. While Loops._rjs.html#run",
    "title": "6. While Loops",
    "section": "Run",
    "text": "Run\nNow run it. Were you correct?"
  },
  {
    "objectID": "8. Programming Concepts/6. While Loops._rjs.html#lesson-objectives",
    "href": "8. Programming Concepts/6. While Loops._rjs.html#lesson-objectives",
    "title": "6. While Loops",
    "section": "Lesson Objectives",
    "text": "Lesson Objectives\n\nIntroduce the while loop in Python\n\nLearn to use a while loop in a program\n\nLearn to trace a program to keep track of what it is doing"
  },
  {
    "objectID": "8. Programming Concepts/6. While Loops._rjs.html#invesigate",
    "href": "8. Programming Concepts/6. While Loops._rjs.html#invesigate",
    "title": "6. While Loops",
    "section": "Invesigate",
    "text": "Invesigate\nTo work out what a program will do, it can be helpful to perform a trace.\ncounter = 1\nwhile counter &lt; 4:\n    print(\"Happy days\")\n    counter = counter + 1\nprint(\"End of program\")\nThis means doing the following:\n\nCreating a trace table for the values of variables\nDrawing arrows to show the order of execution\nWriting down what is printed at each step"
  },
  {
    "objectID": "8. Programming Concepts/6. While Loops._rjs.html#your-turn",
    "href": "8. Programming Concepts/6. While Loops._rjs.html#your-turn",
    "title": "6. While Loops",
    "section": "Your Turn",
    "text": "Your Turn\nWhat is printed?\ndef input_name():\n    name = input(\"What is your name? \")\n    counter = 1\n    while counter &lt;= 4:\n        print(\"Hello \" + name)\n        counter = counter + 1\n    print(\"Goodbye \" + name)"
  },
  {
    "objectID": "8. Programming Concepts/6. While Loops._rjs.html#make",
    "href": "8. Programming Concepts/6. While Loops._rjs.html#make",
    "title": "6. While Loops",
    "section": "Make",
    "text": "Make\n\nWrite a program that writes “Today is Monday” one hundred times using a while loop. Compare this to the way that we might have done this last week with a for loop.\nWrite a program that asks the user for the name of the recent storm and keeps asking until they put in the name “Doris”. Here is some code to get your started.\n\nprint(\"What is the name of the recent storm? \")\nanswer = input()\nOR\nanswer = input(\"What is the name of the recent storm? \")\n\nWrite a program that asks the user for a number until they put in 99. When they put in 99 the program stops.\nWrite a function bored() using a while loop that has the output shown to the right. Start with:\n\ndef bored():\nExample run:\n&gt;&gt;&gt; bored()\nAre you bored yet? n\nAre you bored yet? n\nAre you bored yet? n\nAre you bored yet? n\nAre you bored yet? n\nAre you bored yet? n\nAre you bored yet? y\nGot to you in the end!!\n\nWrite a program that prints 1 to 10 on separate lines. You can do this with a while loop or a for loop. Try to do it both ways.\nNow change your program from (5) so that it prints the numbers from 10–1.\nThe program below asks the user for a password. When does the program stop? Run it and see.\n\nNext add some code to count how many tries the user has had and print that out at the end of the program.\nHow else might you improve this program?\ndef logging_in():\n    print(\"Enter your password on the next line \")\n    password = input()\n    while password != \"secret\":\n        print(\"That password is not the one stored \")\n        print(\"Try again!\")\n        password = input()\n    print(\"Yes that's the correct password!\")\n\nImprove the quiz you wrote in week 3 by adding a while loop. Keep asking the question until the user gets it right."
  },
  {
    "objectID": "8. Programming Concepts/6. While Loops._rjs.html#review",
    "href": "8. Programming Concepts/6. While Loops._rjs.html#review",
    "title": "6. While Loops",
    "section": "Review",
    "text": "Review\nMatch the keyword to the code\nA. Iteration\nB. Selection\nC. Sequence\nNow write three more examples of sequence, selection, iteration.\n#1\nwhile number &lt;= 5:\n    print(\"Hello\")\n    number = number + 1\n\n#2\nnumber1 = 5\nnumber2 = 10\nsum_add = number1 + number2\nsum_mult = number1 * number2\n\n#3\nif weather == \"raining\":\n    print(\"Take an umbrella!\")"
  },
  {
    "objectID": "8. Programming Concepts/7. More While Loops.html",
    "href": "8. Programming Concepts/7. More While Loops.html",
    "title": "7. More While Loops",
    "section": "",
    "text": "What does this code do?\ndef pizza():\n    print(\"What toppings would you like on your pizza? All pizzas have cheese.\")\n    print(\"Enter X when you have finished adding toppings.\")\n    toppings = \"\"\n    next_topping = \"\"\n\n    while next_topping != \"X\":\n        print(\"So far you have a pizza with cheese \" + toppings)\n        next_topping = input(\"Enter topping ... \")\n        toppings = toppings + \" and \" + next_topping\n        print(\"Add your next topping (X when finished)\")\n\n    print(\"Your pizza will have cheese \" + toppings + \". Enjoy!\")",
    "crumbs": [
      "8. Programming Concepts",
      "7. More While Loops"
    ]
  },
  {
    "objectID": "8. Programming Concepts/7. More While Loops.html#investigate",
    "href": "8. Programming Concepts/7. More While Loops.html#investigate",
    "title": "7. More While Loops",
    "section": "",
    "text": "Spot the errors in this program. How many can you find?\ndef example():\n    more_pets = \"y\"\n    print(\"Tell me about the pets do you have at home?\")\n    print()\n    while more_pets == \"y\":\n        next_pet = input(\"Enter your dog's name \")\n        print(\"Thanks for adding \" + next_pet)\n        more_pets = input(\"Do you have any more pets? (y/n)\")\n\n    print(\"End of program\")",
    "crumbs": [
      "8. Programming Concepts",
      "7. More While Loops"
    ]
  },
  {
    "objectID": "8. Programming Concepts/7. More While Loops.html#lesson-objectives",
    "href": "8. Programming Concepts/7. More While Loops.html#lesson-objectives",
    "title": "7. More While Loops",
    "section": "Lesson objectives",
    "text": "Lesson objectives\n\nPractise more while loops in bigger programs\n\nAdd an if statement to make a while loop program more user-friendly\n\nKeep adding to a string variable while the program is running\n\n(Extension) Use a random function to generate a random number in a program",
    "crumbs": [
      "8. Programming Concepts",
      "7. More While Loops"
    ]
  },
  {
    "objectID": "8. Programming Concepts/7. More While Loops.html#investigate-1",
    "href": "8. Programming Concepts/7. More While Loops.html#investigate-1",
    "title": "7. More While Loops",
    "section": "Investigate",
    "text": "Investigate\nWhat did these programs do?\nFor loop\ndef any_square(length):\n    for counter in range(4):\n        forward(length)\n        right(90)\nWhile loop\ndef starter():\n    number = 0\n    while number &lt;= 5:\n        print(\"Hello\")\n        number = number + 1\n    print(\"Goodbye\")\n\nstarter()\nWhat is the difference between the two types of loop?",
    "crumbs": [
      "8. Programming Concepts",
      "7. More While Loops"
    ]
  },
  {
    "objectID": "8. Programming Concepts/7. More While Loops.html#for-loops-and-while-loops",
    "href": "8. Programming Concepts/7. More While Loops.html#for-loops-and-while-loops",
    "title": "7. More While Loops",
    "section": "For Loops and While Loops",
    "text": "For Loops and While Loops\n\nCount Controlled: repeats a group of statements a set number of times, for example, a for loop.\nCondition Controlled: repeats a group of statements until a condition is met, for example a while loop.",
    "crumbs": [
      "8. Programming Concepts",
      "7. More While Loops"
    ]
  },
  {
    "objectID": "8. Programming Concepts/7. More While Loops.html#predict",
    "href": "8. Programming Concepts/7. More While Loops.html#predict",
    "title": "7. More While Loops",
    "section": "",
    "text": "What does this code do?\ndef pizza():\n    print(\"What toppings would you like on your pizza? All pizzas have cheese.\")\n    print(\"Enter X when you have finished adding toppings.\")\n    toppings = \"\"\n    next_topping = \"\"\n\n    while next_topping != \"X\":\n        print(\"So far you have a pizza with cheese \" + toppings)\n        next_topping = input(\"Enter topping ... \")\n        toppings = toppings + \" and \" + next_topping\n        print(\"Add your next topping (X when finished)\")\n\n    print(\"Your pizza will have cheese \" + toppings + \". Enjoy!\")",
    "crumbs": [
      "8. Programming Concepts",
      "7. More While Loops"
    ]
  },
  {
    "objectID": "8. Programming Concepts/7. More While Loops.html#run",
    "href": "8. Programming Concepts/7. More While Loops.html#run",
    "title": "7. More While Loops",
    "section": "Run",
    "text": "Run\nRun the program to see if you were correct.",
    "crumbs": [
      "8. Programming Concepts",
      "7. More While Loops"
    ]
  },
  {
    "objectID": "8. Programming Concepts/7. More While Loops.html#investigate-2",
    "href": "8. Programming Concepts/7. More While Loops.html#investigate-2",
    "title": "7. More While Loops",
    "section": "Investigate",
    "text": "Investigate\n\nHow many times will this program repeat?\n\nWhat would happen if you entered “3” as a choice?\n\nGive an example of a count controlled loop used in this program.\n\nGive an example of a condition controlled loop used in this program.",
    "crumbs": [
      "8. Programming Concepts",
      "7. More While Loops"
    ]
  },
  {
    "objectID": "8. Programming Concepts/7. More While Loops.html#modify-and-make",
    "href": "8. Programming Concepts/7. More While Loops.html#modify-and-make",
    "title": "7. More While Loops",
    "section": "Modify and Make",
    "text": "Modify and Make\n\nImprove the pizza program so that it doesn’t print out “and X” at the end. Add an if statement to do this.\nWrite a version of the game “I went shopping and …”. Then try it on somebody who can’t see the computer to test if they can remember everything the computer has stored. The game should stop when the user presses the enter key rather than adding another item. See the sheet for example output.\nImprove the version so that it doesn’t end with “and”. (This exercise is similar to exercise 1.)\nBelow is a program for a guess the number game that will only run once. The computer comes up with a random number and the user has to guess it.\n\n# guessing game starter\nimport random\n\ndef guessing():\n    print(\"The computer is thinking of a number ... \")\n    computer_number = random.randint(1, 100)\n    print(\"Can you guess the computer’s number? \")\n    guess = int(input(\"Enter your guess here: \"))\n    if guess == computer_number:\n        print(\"Yes! You guessed it! \")\n    else:\n        print(\"No, sorry that wasn't it.\")\nModify this program using a while loop so that it keeps asking the user for another number until they guess it correctly. If they guess the number correctly it should display a well done message which includes their name.\n\nIf they guess a number that is higher than the actual number, output “Too high”.\nIf they guess a number that is lower than the actual number, output “Too low”.\nEnsure you add comments explaining your code.\n\nExtension Task: Try the following statements out in the Python shell (not in a new file).\n&gt;&gt;&gt; ord(\"a\")\n97\n&gt;&gt;&gt; ord(\"A\")\n65\n&gt;&gt;&gt; chr(97)\n'a'\n&gt;&gt;&gt; chr(65)\n'A'\n&gt;&gt;&gt; chr(66)\n'B'\n&gt;&gt;&gt; chr(67)\n'C'\nord() and chr() are functions that you can use to work out the ASCII code in decimal for characters that are entered in the keyboard.\n\nWrite a program that will write out all the letters from “a” to “z” using the chr function and either a for loop or a while loop.\nWrite a program that will ask the user for a character and output its ASCII value.",
    "crumbs": [
      "8. Programming Concepts",
      "7. More While Loops"
    ]
  },
  {
    "objectID": "8. Programming Concepts/7. More While Loops.html#review",
    "href": "8. Programming Concepts/7. More While Loops.html#review",
    "title": "7. More While Loops",
    "section": "Review",
    "text": "Review\nWould you use a for loop or a while loop for these programs?\n\nTo input 10 numbers\n\nTo ask the user to enter names of their brothers and sisters\n\nTo calculate the average of 7 numbers\n\nTo input the names of a team of netball players\n\nTo let the user enter their password until it is correct",
    "crumbs": [
      "8. Programming Concepts",
      "7. More While Loops"
    ]
  },
  {
    "objectID": "8. Programming Concepts/7. More While Loops._rjs.html#investigate",
    "href": "8. Programming Concepts/7. More While Loops._rjs.html#investigate",
    "title": "More While Loops",
    "section": "Investigate",
    "text": "Investigate\nSpot the errors in this program. How many can you find?\ndef example():\n    more_pets = \"y\"\n    print(\"Tell me about the pets do you have at home?\")\n    print()\n    while more_pets == \"y\":\n        next_pet = input(\"Enter your dog's name \")\n        print(\"Thanks for adding \" + next_pet)\n        more_pets = input(\"Do you have any more pets? (y/n)\")\n\n    print(\"End of program\")"
  },
  {
    "objectID": "8. Programming Concepts/7. More While Loops._rjs.html#lesson-objectives",
    "href": "8. Programming Concepts/7. More While Loops._rjs.html#lesson-objectives",
    "title": "7. More While Loops",
    "section": "Lesson objectives",
    "text": "Lesson objectives\n\nPractise more while loops in bigger programs\n\nAdd an if statement to make a while loop program more user-friendly\n\nKeep adding to a string variable while the program is running\n\n(Extension) Use a random function to generate a random number in a program"
  },
  {
    "objectID": "8. Programming Concepts/7. More While Loops._rjs.html#investigate-1",
    "href": "8. Programming Concepts/7. More While Loops._rjs.html#investigate-1",
    "title": "More While Loops",
    "section": "Investigate",
    "text": "Investigate\nWhat did these programs do?\nFor loop\ndef any_square(length):\n    for counter in range(4):\n        forward(length)\n        right(90)\nWhile loop\ndef starter():\n    number = 0\n    while number &lt;= 5:\n        print(\"Hello\")\n        number = number + 1\n    print(\"Goodbye\")\n\nstarter()\nWhat is the difference between the two types of loop?"
  },
  {
    "objectID": "8. Programming Concepts/7. More While Loops._rjs.html#for-loops-and-while-loops",
    "href": "8. Programming Concepts/7. More While Loops._rjs.html#for-loops-and-while-loops",
    "title": "More While Loops",
    "section": "For Loops and While Loops",
    "text": "For Loops and While Loops\n\nCount Controlled: repeats a group of statements a set number of times, for example, a for loop.\nCondition Controlled: repeats a group of statements until a condition is met, for example a while loop."
  },
  {
    "objectID": "8. Programming Concepts/7. More While Loops._rjs.html#predict",
    "href": "8. Programming Concepts/7. More While Loops._rjs.html#predict",
    "title": "7. More While Loops",
    "section": "Predict",
    "text": "Predict\nWhat does this code do?\ndef pizza():\n    print(\"What toppings would you like on your pizza? All pizzas have cheese.\")\n    print(\"Enter X when you have finished adding toppings.\")\n    toppings = \"\"\n    next_topping = \"\"\n\n    while next_topping != \"X\":\n        print(\"So far you have a pizza with cheese \" + toppings)\n        next_topping = input(\"Enter topping ... \")\n        toppings = toppings + \" and \" + next_topping\n        print(\"Add your next topping (X when finished)\")\n\n    print(\"Your pizza will have cheese \" + toppings + \". Enjoy!\")"
  },
  {
    "objectID": "8. Programming Concepts/7. More While Loops._rjs.html#run",
    "href": "8. Programming Concepts/7. More While Loops._rjs.html#run",
    "title": "More While Loops",
    "section": "Run",
    "text": "Run\nRun the program to see if you were correct."
  },
  {
    "objectID": "8. Programming Concepts/7. More While Loops._rjs.html#investigate-2",
    "href": "8. Programming Concepts/7. More While Loops._rjs.html#investigate-2",
    "title": "More While Loops",
    "section": "Investigate",
    "text": "Investigate\n\nHow many times will this program repeat?\n\nWhat would happen if you entered “3” as a choice?\n\nGive an example of a count controlled loop used in this program.\n\nGive an example of a condition controlled loop used in this program."
  },
  {
    "objectID": "8. Programming Concepts/7. More While Loops._rjs.html#modify-and-make",
    "href": "8. Programming Concepts/7. More While Loops._rjs.html#modify-and-make",
    "title": "7. More While Loops",
    "section": "Modify and Make",
    "text": "Modify and Make\n\nImprove the pizza program so that it doesn’t print out “and X” at the end. Add an if statement to do this.\nWrite a version of the game “I went shopping and …”. Then try it on somebody who can’t see the computer to test if they can remember everything the computer has stored. The game should stop when the user presses the enter key rather than adding another item. See the sheet for example output.\nImprove the version so that it doesn’t end with “and”. (This exercise is similar to exercise 1.)\nBelow is a program for a guess the number game that will only run once. The computer comes up with a random number and the user has to guess it.\n\n# guessing game starter\nimport random\n\ndef guessing():\n    print(\"The computer is thinking of a number ... \")\n    computer_number = random.randint(1, 100)\n    print(\"Can you guess the computer’s number? \")\n    guess = int(input(\"Enter your guess here: \"))\n    if guess == computer_number:\n        print(\"Yes! You guessed it! \")\n    else:\n        print(\"No, sorry that wasn't it.\")\nModify this program using a while loop so that it keeps asking the user for another number until they guess it correctly. If they guess the number correctly it should display a well done message which includes their name.\n\nIf they guess a number that is higher than the actual number, output “Too high”.\nIf they guess a number that is lower than the actual number, output “Too low”.\nEnsure you add comments explaining your code.\n\nExtension Task: Try the following statements out in the Python shell (not in a new file).\n&gt;&gt;&gt; ord(\"a\")\n97\n&gt;&gt;&gt; ord(\"A\")\n65\n&gt;&gt;&gt; chr(97)\n'a'\n&gt;&gt;&gt; chr(65)\n'A'\n&gt;&gt;&gt; chr(66)\n'B'\n&gt;&gt;&gt; chr(67)\n'C'\nord() and chr() are functions that you can use to work out the ASCII code in decimal for characters that are entered in the keyboard.\n\nWrite a program that will write out all the letters from “a” to “z” using the chr function and either a for loop or a while loop.\nWrite a program that will ask the user for a character and output its ASCII value."
  },
  {
    "objectID": "8. Programming Concepts/7. More While Loops._rjs.html#review",
    "href": "8. Programming Concepts/7. More While Loops._rjs.html#review",
    "title": "More While Loops",
    "section": "Review",
    "text": "Review\nWould you use a for loop or a while loop for these programs?\n\nTo input 10 numbers\n\nTo ask the user to enter names of their brothers and sisters\n\nTo calculate the average of 7 numbers\n\nTo input the names of a team of netball players\n\nTo let the user enter their password until it is correct"
  },
  {
    "objectID": "8. Programming Concepts/7. More While Loops.html#run-and-investigate",
    "href": "8. Programming Concepts/7. More While Loops.html#run-and-investigate",
    "title": "7. More While Loops",
    "section": "Run and Investigate",
    "text": "Run and Investigate\nRun the code and see if your prediction was correct. Then answer the questions below.\n\nWhat happens if you don’t add any toppings?\nIf you run this program and the user wants to add pineapple, olives and mushrooms, fill in the table on the sheet.\nWhy do you need a while loop?\nWhat would happen if you didn’t have the line next_topping = \"\"? (Try it and see.)\nWhat would happen if you didn’t have the line toppings = \"\"? (Try it and see.)\nWhat does this line do?\n\ntoppings = toppings + \" and \" + next_topping\n\nHow would you like to improve this program?\nNow add comments (beginning with #) to the program to make sure everything you understand is included in your program for future reference. When you think you understand how this program works then go on to the exercises.",
    "crumbs": [
      "8. Programming Concepts",
      "7. More While Loops"
    ]
  },
  {
    "objectID": "8. Programming Concepts/7. More While Loops.html#answers",
    "href": "8. Programming Concepts/7. More While Loops.html#answers",
    "title": "7. More While Loops",
    "section": "Answers",
    "text": "Answers\n\nWhat happens if you don’t add any toppings? Fill in the table\n\nWhy do you need a while loop?\n\nWhat would happen if you didn’t have the line next_topping = \"\" ?\n\nWhat would happen if you didn’t have the line toppings = \"\" ?\n\nWhat does this line do?\n\nHow would you like to improve this program?\n\n\n\n\nplaceholder",
    "crumbs": [
      "8. Programming Concepts",
      "7. More While Loops"
    ]
  },
  {
    "objectID": "8. Programming Concepts/7. More While Loops.html#tasks-in-pairs-20-mins",
    "href": "8. Programming Concepts/7. More While Loops.html#tasks-in-pairs-20-mins",
    "title": "7. More While Loops",
    "section": "Tasks in pairs – 20 mins",
    "text": "Tasks in pairs – 20 mins\nDo the programming exercises in pairs from the sheet (Task 4):\n\nImprove the pizza program so that it doesn’t print out “and X” at the end.\n\nAdd an if statement to do this.\n\nWrite a version of the game “I went shopping and …”.\n\nThen try it on somebody who can’t see the computer to test if they can remember everything the computer has stored.\n\nThe game should stop when the user presses the enter key rather than adding another item.\n\n\n(There are extension exercises if you finish early.)\n\n\n\nplaceholder",
    "crumbs": [
      "8. Programming Concepts",
      "7. More While Loops"
    ]
  },
  {
    "objectID": "8. Programming Concepts/7. More While Loops.html#review-10-mins",
    "href": "8. Programming Concepts/7. More While Loops.html#review-10-mins",
    "title": "7. More While Loops",
    "section": "Review – 10 mins",
    "text": "Review – 10 mins\nIn the last few lessons you have learned about if statements, for loops, and while loops – these are the most useful and important elements of any programming language.\nTask: Imagine you are writing a letter to somebody in the year below who is just starting to learn programming. Write down 5 tips you would give them.\n\nWhat sometimes goes wrong?\n\nHow can you fix it?\n\nHow can you get better at programming?\n\nWhat do you do if you get stuck?",
    "crumbs": [
      "8. Programming Concepts",
      "7. More While Loops"
    ]
  },
  {
    "objectID": "8. Programming Concepts/8 Menus.html",
    "href": "8. Programming Concepts/8 Menus.html",
    "title": "8. Menus",
    "section": "",
    "text": "Spot the errors in this program. How many can you find?\ndef example():\n    more_pets = \"y\"\n    print(\"Tell me about the pets do you have at home?\")\n    print()\n    while more_pets == \"y\":\n        next_pet = input(\"Enter your dog's name \")\n        print(\"Thanks for adding \" + next_pet)\n        more_pets = input(\"Do you have any more pets? (y/n)\")\n\n    print(\"End of program\")",
    "crumbs": [
      "8. Programming Concepts",
      "8. Menus"
    ]
  },
  {
    "objectID": "8. Programming Concepts/8 Menus.html#investigate",
    "href": "8. Programming Concepts/8 Menus.html#investigate",
    "title": "8. Menus",
    "section": "",
    "text": "Spot the errors in this program. How many can you find?\ndef example():\n    more_pets = \"y\"\n    print(\"Tell me about the pets do you have at home?\")\n    print()\n    while more_pets == \"y\":\n        next_pet = input(\"Enter your dog's name \")\n        print(\"Thanks for adding \" + next_pet)\n        more_pets = input(\"Do you have any more pets? (y/n)\")\n\n    print(\"End of program\")",
    "crumbs": [
      "8. Programming Concepts",
      "8. Menus"
    ]
  },
  {
    "objectID": "8. Programming Concepts/8 Menus.html#lesson-objectives",
    "href": "8. Programming Concepts/8 Menus.html#lesson-objectives",
    "title": "8. Menus",
    "section": "Lesson Objectives",
    "text": "Lesson Objectives\n\nLook at the differences between for loops and while loops\n\nUse a while loop to develop a menu to run a selection of different Python programs",
    "crumbs": [
      "8. Programming Concepts",
      "8. Menus"
    ]
  },
  {
    "objectID": "8. Programming Concepts/8 Menus.html#investigate-1",
    "href": "8. Programming Concepts/8 Menus.html#investigate-1",
    "title": "8. Menus",
    "section": "Investigate",
    "text": "Investigate\nWhat did these programs do?\nFor loop\ndef any_square(length):\n    for counter in range(4):\n        forward(length)\n        right(90)\nWhile loop\ndef starter():\n    number = 0\n    while number &lt;= 5:\n        print(\"Hello\")\n        number = number + 1\n    print(\"Goodbye\")\n\nstarter()\nWhat is the difference between the two types of loop?",
    "crumbs": [
      "8. Programming Concepts",
      "8. Menus"
    ]
  },
  {
    "objectID": "8. Programming Concepts/8 Menus.html#for-loops-and-while-loops",
    "href": "8. Programming Concepts/8 Menus.html#for-loops-and-while-loops",
    "title": "8. Menus",
    "section": "For Loops and While Loops",
    "text": "For Loops and While Loops\n\nCount Controlled: repeats a group of statements a set number of times, for example, a for loop.\nCondition Controlled: repeats a group of statements until a condition is met, for example a while loop.\nTechnically a while loop is called a pre-condition loop because it checks the condition before the first iteration. Other langugages also have post-condition loops where one iteration always happens before the condition is first checked.",
    "crumbs": [
      "8. Programming Concepts",
      "8. Menus"
    ]
  },
  {
    "objectID": "8. Programming Concepts/8 Menus.html#predict",
    "href": "8. Programming Concepts/8 Menus.html#predict",
    "title": "8. Menus",
    "section": "Predict",
    "text": "Predict\nWork out what this program does – there is a lot going on!\ndef message():\n    message = input(\"Enter your message: \")\n    for i in range(10):\n        print(message)\n\ndef timesTable():\n    num = int(input(\"Enter a number: \"))\n    for i in range(1, 11):\n        print(i * num)\n\ndef main():\n    choice = \"\"\n    while choice != \"3\":\n        print(\"1. Message Repeater\")\n        print(\"2. Time Table\")\n        print(\"3. Exit\")\n        print(\"Enter your choice:  \")\n        choice = input()\n        if choice == \"1\":\n            message()\n        elif choice == \"2\":\n            timesTable()\n    print(\"Goodbye\")\n\nmain()",
    "crumbs": [
      "8. Programming Concepts",
      "8. Menus"
    ]
  },
  {
    "objectID": "8. Programming Concepts/8 Menus.html#run",
    "href": "8. Programming Concepts/8 Menus.html#run",
    "title": "8. Menus",
    "section": "Run",
    "text": "Run\nRun the program to see if you were correct.",
    "crumbs": [
      "8. Programming Concepts",
      "8. Menus"
    ]
  },
  {
    "objectID": "8. Programming Concepts/8 Menus.html#investigate-2",
    "href": "8. Programming Concepts/8 Menus.html#investigate-2",
    "title": "8. Menus",
    "section": "Investigate",
    "text": "Investigate\n\nHow many times will this program repeat?\n\nWhat would happen if you entered “3” as a choice?\n\nGive an example of a count controlled loop used in this program.\n\nGive an example of a condition controlled loop used in this program.",
    "crumbs": [
      "8. Programming Concepts",
      "8. Menus"
    ]
  },
  {
    "objectID": "8. Programming Concepts/8 Menus.html#modify-and-make",
    "href": "8. Programming Concepts/8 Menus.html#modify-and-make",
    "title": "8. Menus",
    "section": "Modify and Make",
    "text": "Modify and Make\n\nUpdate the message function to allow the user to choose how many times their message is repeated.\n\nExtend the timetable program to enable a given number to be multiplied to the power of numbers 1 to 5.\n\nAdd a new function and update the if statement to allow the user to choose the new 3rd option.\n\nUse the ** exponent operator in your calculation.",
    "crumbs": [
      "8. Programming Concepts",
      "8. Menus"
    ]
  },
  {
    "objectID": "8. Programming Concepts/8 Menus.html#review",
    "href": "8. Programming Concepts/8 Menus.html#review",
    "title": "8. Menus",
    "section": "Review",
    "text": "Review\nWould you use a for loop or a while loop for these programs?\n\nTo input 10 numbers\n\nTo ask the user to enter names of their brothers and sisters\n\nTo calculate the average of 7 numbers\n\nTo input the names of a team of netball players\n\nTo let the user enter their password until it is correct",
    "crumbs": [
      "8. Programming Concepts",
      "8. Menus"
    ]
  },
  {
    "objectID": "8. Programming Concepts/7. More While Loops._rjs.html#run-and-investigate",
    "href": "8. Programming Concepts/7. More While Loops._rjs.html#run-and-investigate",
    "title": "7. More While Loops",
    "section": "Run and Investigate",
    "text": "Run and Investigate\nRun the code and see if your prediction was correct. Then answer the questions below.\n\nWhat happens if you don’t add any toppings?\nIf you run this program and the user wants to add pineapple, olives and mushrooms, fill in the table on the sheet.\nWhy do you need a while loop?\nWhat would happen if you didn’t have the line next_topping = \"\"? (Try it and see.)\nWhat would happen if you didn’t have the line toppings = \"\"? (Try it and see.)\nWhat does this line do?\n\ntoppings = toppings + \" and \" + next_topping\n\nHow would you like to improve this program?\nNow add comments (beginning with #) to the program to make sure everything you understand is included in your program for future reference. When you think you understand how this program works then go on to the exercises."
  },
  {
    "objectID": "8. Programming Concepts/8 Menus._rjs.html#investigate",
    "href": "8. Programming Concepts/8 Menus._rjs.html#investigate",
    "title": "8. Menus",
    "section": "Investigate",
    "text": "Investigate\nSpot the errors in this program. How many can you find?\ndef example():\n    more_pets = \"y\"\n    print(\"Tell me about the pets do you have at home?\")\n    print()\n    while more_pets == \"y\":\n        next_pet = input(\"Enter your dog's name \")\n        print(\"Thanks for adding \" + next_pet)\n        more_pets = input(\"Do you have any more pets? (y/n)\")\n\n    print(\"End of program\")"
  },
  {
    "objectID": "8. Programming Concepts/8 Menus._rjs.html#lesson-objectives",
    "href": "8. Programming Concepts/8 Menus._rjs.html#lesson-objectives",
    "title": "8. Menus",
    "section": "Lesson Objectives",
    "text": "Lesson Objectives\n\nLook at the differences between for loops and while loops\n\nUse a while loop to develop a menu to run a selection of different Python programs"
  },
  {
    "objectID": "8. Programming Concepts/8 Menus._rjs.html#investigate-1",
    "href": "8. Programming Concepts/8 Menus._rjs.html#investigate-1",
    "title": "8. Menus",
    "section": "Investigate",
    "text": "Investigate\nWhat did these programs do?\nFor loop\ndef any_square(length):\n    for counter in range(4):\n        forward(length)\n        right(90)\nWhile loop\ndef starter():\n    number = 0\n    while number &lt;= 5:\n        print(\"Hello\")\n        number = number + 1\n    print(\"Goodbye\")\n\nstarter()\nWhat is the difference between the two types of loop?"
  },
  {
    "objectID": "8. Programming Concepts/8 Menus._rjs.html#for-loops-and-while-loops",
    "href": "8. Programming Concepts/8 Menus._rjs.html#for-loops-and-while-loops",
    "title": "8. Menus",
    "section": "For Loops and While Loops",
    "text": "For Loops and While Loops\n\nCount Controlled: repeats a group of statements a set number of times, for example, a for loop.\nCondition Controlled: repeats a group of statements until a condition is met, for example a while loop."
  },
  {
    "objectID": "8. Programming Concepts/8 Menus._rjs.html#predict",
    "href": "8. Programming Concepts/8 Menus._rjs.html#predict",
    "title": "8. Menus",
    "section": "Predict",
    "text": "Predict\nWork out what this program does – there is a lot going on!\ndef message():\n    message = input(\"Enter your message: \")\n    for i in range(10):\n        print(message)\n\ndef timesTable():\n    num = int(input(\"Enter a number: \"))\n    for i in range(1, 11):\n        print(i * num)\n\ndef main():\n    choice = \"\"\n    while choice != \"3\":\n        print(\"1. Message Repeater\")\n        print(\"2. Time Table\")\n        print(\"3. Exit\")\n        print(\"Enter your choice:  \")\n        choice = input()\n        if choice == \"1\":\n            message()\n        elif choice == \"2\":\n            timesTable()\n    print(\"Goodbye\")\n\nmain()"
  },
  {
    "objectID": "8. Programming Concepts/8 Menus._rjs.html#run",
    "href": "8. Programming Concepts/8 Menus._rjs.html#run",
    "title": "8. Menus",
    "section": "Run",
    "text": "Run\nRun the program to see if you were correct."
  },
  {
    "objectID": "8. Programming Concepts/8 Menus._rjs.html#investigate-2",
    "href": "8. Programming Concepts/8 Menus._rjs.html#investigate-2",
    "title": "8. Menus",
    "section": "Investigate",
    "text": "Investigate\n\nHow many times will this program repeat?\n\nWhat would happen if you entered “3” as a choice?\n\nGive an example of a count controlled loop used in this program.\n\nGive an example of a condition controlled loop used in this program."
  },
  {
    "objectID": "8. Programming Concepts/8 Menus._rjs.html#modify-and-make",
    "href": "8. Programming Concepts/8 Menus._rjs.html#modify-and-make",
    "title": "8. Menus",
    "section": "Modify and Make",
    "text": "Modify and Make\n\nUpdate the message function to allow the user to choose how many times their message is repeated.\n\nExtend the timetable program to enable a given number to be multiplied to the power of numbers 1 to 5.\n\nAdd a new function and update the if statement to allow the user to choose the new 3rd option.\n\nUse the ** exponent operator in your calculation."
  },
  {
    "objectID": "8. Programming Concepts/8 Menus._rjs.html#review",
    "href": "8. Programming Concepts/8 Menus._rjs.html#review",
    "title": "8. Menus",
    "section": "Review",
    "text": "Review\nWould you use a for loop or a while loop for these programs?\n\nTo input 10 numbers\n\nTo ask the user to enter names of their brothers and sisters\n\nTo calculate the average of 7 numbers\n\nTo input the names of a team of netball players\n\nTo let the user enter their password until it is correct"
  }
]